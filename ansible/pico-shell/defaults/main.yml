---
# Defaults for the picoCTF-web role. These are the lowest priority variables
# and can easily be overridden in group_vars, host_vars, or the command line.

pico_base_dir     : "/picoCTF"
shell_manager_dir :  "{{pico_base_dir}}/picoCTF-shell"
virtualenv_dir    : "/picoCTF-env"

###
# wetty configuration
###
wetty_js_path: "/opt/wetty/node_modules/wetty.js"

# configure nginx
site_config_name: "shell"
wetty_port: "4242"
wetty_server_path: "http://127.0.0.1:{{ wetty_port }}/"

# problem settings
deb_dir:    "/picoCTF-debs"
bundle_dir: "/picoCTF-bundles"

##
# Problem Settings
# These will only be used if `problem_source_dirs` and `bundles` are not
# specified in an environmental configuration AND `auto_load_problems` is True
##
problem_source_dirs:
  - "{{ pico_base_dir }}/problems/examples/binary-exploitation/buffer-overflow-1"
  - "{{ pico_base_dir }}/problems/examples/cryptography/ecb-1"
  - "{{ pico_base_dir }}/problems/examples/web-exploitation/sql-injection-1"
  - "{{ pico_base_dir }}/problems/examples/on-demand"

bundles:
  - "{{ pico_base_dir }}/problems/bundles/challenge-sampler.json"
  - "{{ pico_base_dir }}/problems/bundles/on-demand.json"

# SSL with Let's Encrypt
enable_certbot  : False

# SSL with out-of-band cert and vault-encrypted key
enable_shell_ssl : False
enable_ssl       : "{{ enable_shell_ssl }}"
ssl_crt          : "ssl-pico.chained.crt"
ssl_key          : "ssl-pico.key"
ssl_key_vault    : "{{ ssl_key }}.vault_encrypted"

enable_shell_proxy: True
