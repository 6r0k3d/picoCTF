# {{ ansible_managed }}

server {
    server_name {{ shell_hostname }};
    root   /usr/share/nginx/html;
    {% if enable_shell_ssl | bool -%}
    listen       443 ssl;

    ssl_certificate  /etc/ssl/certs/ssl-pico.chained.crt;
    ssl_certificate_key /etc/ssl/private/ssl-pico.key;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    {% else %}
    listen       80;
    {% endif %}

    more_clear_headers Server;
    more_clear_headers Strict-Transport-Security;

    location /shell {
        proxy_pass http://127.0.0.1:{{ wetty_port }}/shell;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 43200000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_hide_header X-Frame-Options;
    }

    location / {
        {% if (enable_shell_proxy|bool) -%}
        if ($http_referer ~ $scheme://{{ shell_hostname }}/problem/(\d+)/?(.*) ) {
            set $port $1;
            return 307 $scheme://{{ shell_hostname }}/problem/$port$request_uri;
        }
        {% endif %}
        types        { }
        default_type application/octet-stream;
    }
    {% if (enable_shell_proxy|bool) -%}
    location ~ /problem/(\d+)/?(.*) {
        set $port $1;
        set $path $2;
        rewrite ^.*$ /$path break;
        proxy_pass http://127.0.0.1:$port;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_redirect http:// $scheme://;
    }
    {% endif %}
}

{% if enable_shell_ssl | bool -%}
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name {{ shell_hostname }};
        return 301 https://$server_name$request_uri;
}
{% endif %}
