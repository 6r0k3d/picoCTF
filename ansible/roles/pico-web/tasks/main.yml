---
# Playbook that installs and configures nginx
# This is the base configuration across any nginx server we deploy
# This does not include adding any content

# Don't recurse, clone picoCTF-web seperately
# [TODO] - fix should not be nessecary shellinbox related
- name: Clone picoCTF-platform
  git: 
    repo: "{{ pico_repo }}" 
    version: "{{ pico_verison }}"
    dest: "{{ pico_code_dir }}"

- name: Ensure admin user owns pico code dir
  file:
    path: "{{ pico_code_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    recurse: yes

- name: Clone picoCTF-web
  git:
    repo: "{{ web_repo }}"
    version: "{{ web_verison }}"
    dest: "{{  web_code_dir }}"

- name: Ensure admin user owns picoCTF-shell-manager dir
  file:
    path: "{{ web_code_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    recurse: yes

- name: Ensure admin user owns pico http dir
  file:
    path: "{{ pico_http_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory


- include: dependencies.yml
- include: nginx.yml
- include: nodejs.yml

# Need to load passwords from the vault for staging environments
- include_vars: group_vars/vault_staging.yml
  when: "'staging' in group_names" 
  
- include: picoCTF-webapp.yml
- include: gunicorn.yml
#- include: monit.yml

- name: Ensure nginx is running
  service: 
    name: nginx
    state: started
    enabled: yes
    
    
## Next step is the following two scripts
# /vagrant/scripts/web_setup.sh  (fails due to a vagrant config issue)
# or /vagrant/picoCTF-web/scripts/devploy.sh (builds and redeploys)
