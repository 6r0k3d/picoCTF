---
# Playbook that installs and configures the picoCTF API/webapp

- name: Ensure admin user owns pico http dir
  file:
    path: "{{ pico_http_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory

# Source was cloned in main
- name: Install picoCTF-web api from source
  pip:
    name: "file://{{ pico_web_api_dir }}"
    executable: pip3
    extra_args: "--upgrade"

- name: Compile CoffeeScript
  command: "cjsx -bc -o {{ pico_web_js_out_path }} {{ pico_web_coffescript_in_path }}"

- name: Ensure admin user owns pico web backup dir
  file:
    path: "{{ pico_web_backup_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory

- name: Backup existing web site
  command: "cp -R {{ pico_http_dir }} {{ pico_web_backup_dir }}"

- name: Remove old version of web
  file:
    path: "{{ pico_http_dir }}"
    state: absent

# [TODO] no need for this to be root
- name: Run Jekyll to rebuild new web
  shell: "cd {{ pico_web_api_dir }}/web && jekyll build"
  become: yes

- name: Ensure admin user owns pico web config dir
  file:
    path: "{{ web_config_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory

- name: Template deployment settings
  template:
    src: deploy_settings.py.j2
    dest: "{{ web_config_dir }}/deploy_settings.py"
    backup: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  no_log: True
