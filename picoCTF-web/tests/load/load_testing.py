"""
Load test picoCTF platform functionality.

Requires a connection to a MongoDB database populated with test user
credentials generated by the registration locustfile (registration.py)
"""

from locust import HttpLocust, task, TaskSet

from util import get_db, LOGIN_ENDPOINT, LOGOUT_ENDPOINT, SHELL_PAGE_URL


def acquire_user(properties={}):
    """Retrieve an available test user with the specified properties."""
    properties['in_use'] = {'$in': [False, None]}
    return get_db().users.find_one_and_update(
        properties, {'$set': {'in_use': True}}, {'_id': 0})

def release_user(username):
    """Release a test user for usage by other threads."""
    get_db().users.find_one_and_update(
        {'username': username}, {'$set': {'in_use': False}})

def login(l, username=None, password=None):
    if not username:
        user = acquire_user()
    else:
        user = dict()
        user['username'] = username
        user['password'] = password
    l.client.post(LOGIN_ENDPOINT, json={
        'username': user['username'],
        'password': user['password']
    })
    return user['username']

def logout(l):
    l.client.get(LOGOUT_ENDPOINT)

class LoadTestingTasks(TaskSet):

    @task
    def load_shell_page(l):
        username = login(l)
        l.client.get(SHELL_PAGE_URL)
        logout(l)
        release_user(username)

class LoadTestingLocust(HttpLocust):
    task_set = LoadTestingTasks
    min_wait = 1000
    max_wait = 4000
